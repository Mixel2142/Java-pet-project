server.port: 8761

spring:
  application:
    name: admin-service
# SPRING BOOT ADMIN {
  boot:
    admin: #доступен по localhost:8761/admin
      context-path: /admin  #A different context path for admin server has been provided not conflicting with eureka
        # SPRING BOOT ADMIN }
# SPRING BOOT ADMIN CLIENT {

#Enables the Spring Boot Admin Client.
management.endpoints.web.exposure.include: "*"
management.endpoint.shutdown.enabled: true
management.endpoint.heapdump.enabled: false
management.endpoint.health.show-details: always
# SPRING BOOT ADMIN CLIENT }

# SECURiTY
myeureka:
  server:
    system:
      login: SYSTEM_LOGIN
      password: SYSTEM_PASSWORD
    actuator:
      login: ${ACTUATOR_LOGIN}
      password: ${ACTUATOR_PASSWORD}
#control:
#  server:
#    admin:
#      login: ADMIN_LOGIN
#      password: ADMIN_PASSWORD
# SECURiTY

control.server.admin.login: ADMIN_LOGIN
control.server.admin.password: ADMIN_PASSWORD

eureka:
  instance:
    instanceId: ${spring.cloud.client.hostname}:${spring.application.name}:${spring.application.instance_id:${random.value}}
    preferIpAddress: false
#    hostname: localhost
    metadata-map:
      user.name: ${myeureka.server.actuator.login}         #These two are needed so that the server
      user.password: ${myeureka.server.actuator.password}    #can access the protected client endpoints
  client:
    registryFetchIntervalSeconds: 5
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: ${EUREKA_CLIENT_URI}
    healthcheck:
      enabled: true
  server:
    enable-self-preservation: false #default true
    eviction-interval-timer-in-ms: 10000 #default 60000
    response-cache-update-interval-ms: 3000 #default 30000
    use-read-only-response-cache: false

######################### App configurations ############################################
server:
  port: ${MONOLIT_PORT}

spring:
  application:
    name: monolit
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true
          lowerCaseServiceId: true
    loadbalancer:
      ribbon:
        enabled: false
######################### Email config ############################
  mail:
    host: smtp.gmail.com
    port: 465
    protocol: smtps
    username: teeneducationportal@gmail.com
    password: GodOfDeathLikesApples
    properties:
      mail:
        transport.protocol: smtps
        smtps:
          auth: true
          starttls.enable: true
          timeout: 8000
support.email: teeneducationportal@gmail.com

######################### SPRING BOOT ADMIN CLIENT #########################
#Эти учетные данные будут использоваться Admin Server для аутентификации на конечных точках привода клиента
#spring.boot.admin.client.instance.metadata.user.name: ACTUATOR_LOGIN
#spring.boot.admin.client.instance.metadata.user.password: ACTUATOR_PASSWORD
#
#spring.security.user.name: ACTUATOR_LOGIN
#spring.security.user.password: ACTUATOR_PASSWORD
#management.security.role: ACTUATOR

management:
  endpoint:
    shutdown.enabled: true
    heapdump.enabled: false
    health.show-details: always
  endpoints:
    enabled-by-default: true
    web.exposure.include: "*"
#      cors:
#        allowed-origins: "*"
######################### EUREKA client config ############################
eureka:
  instance:
    instanceId: ${spring.cloud.client.hostname}:${spring.application.name}:${spring.application.instance_id:${random.value}}
    preferIpAddress: false
  client:
    registryFetchIntervalSeconds: 5
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: ${EUREKA_HOST}
    healthcheck:
      enabled: true
#instance.preferIpAddress в true и, когда приложение регистрируется в eureka, оно использует свой IP-адрес, а не имя хоста.
######################### Hibernate config ############################
# TODO изменить флаг
spring.jpa.hibernate.ddl-auto: create-drop
spring.datasource.url: jdbc:postgresql://${POSTGRES_HOST}/${POSTGRES_DB}
spring.datasource.username: ${POSTGRES_USER}
spring.datasource.password: ${POSTGRES_PASSWORD}
######################### TTL Session (minuts) #######################
#server.servlet.session.timeout: 1m

# Now 1 hour
jwt.time.validity.accesstoken: 3600
# 5 * 60 * 60 :  5 часов
# Now 1 mounth
jwt.time.validity.refreshtoken: 86400

jwt.secret: bla_bla_secret

####################### SWUGGER ##################################################
springdoc.api-docs.path: /api/free/v3/api-docs
springdoc.swagger-ui.path: /api/free/swagger-ui.html

########################### Scheduler #############################################
#RULES:
#   <ul>
#	 * <li>second</li>
#	 * <li>minute</li>
#	 * <li>hour</li>
#	 * <li>day of month</li>
#	 * <li>month</li>
#	 * <li>day of week</li>
#	 </ul>
#   * (all) – it is used to specify that event should happen for every time unit. For example, “*” in the <minute> field – means “for every minute”
#   ? (any) – it is utilized in the <day-of-month> and <day-of -week> fields to denote the arbitrary value – neglect the field value. For example, if we want to fire a script at “5th of every month” irrespective of what the day of the week falls on that date, then we specify a “?” in the <day-of-week> field
#   – (range) – it is used to determine the value range. For example, “10-11” in <hour> field means “10th and 11th hours”
#   , (values) – it is used to specify multiple values. For example, “MON, WED, FRI” in <day-of-week> field means on the days “Monday, Wednesday, and Friday”
#   / (increments) – it is used to specify the incremental values. For example, a “5/15” in the <minute> field, means at “5, 20, 35 and 50 minutes of an hour”
#   L (last) – it has different meanings when used in various fields. For example, if it's applied in the <day-of-month> field, then it means last day of the month, i.e. “31st for January” and so on as per the calendar month. It can be used with an offset value, like “L-3“, which denotes the “third to last day of the calendar month”. In the <day-of-week>, it specifies the “last day of a week”. It can also be used with another value in <day-of-week>, like “6L“, which denotes the “last Friday”
#   W (weekday) – it is used to specify the weekday (Monday to Friday) nearest to a given day of the month. For example, if we specify “10W” in the <day-of-month> field, then it means the “weekday near to 10th of that month”. So if “10th” is a Saturday, then the job will be triggered on “9th”, and if “10th” is a Sunday, then it will trigger on “11th”. If you specify “1W” in the <day-of-month> and if “1st” is Saturday, then the job will be triggered on “3rd” which is Monday, and it will not jump back to the previous month
#   # – it is used to specify the “N-th” occurrence of a weekday of the month, for example, “3rd Friday of the month” can be indicated as “6#3“

# at 0 sec at 0 min at 5 hour at all day of month at all month at any day of week and all year удаляются старые токены
task.purge.cron.refreshToken:  0 0 5 * * ?

# at 0 sec at 0 min at 4 hour at all day of month at all month at any day of week and all year
#task.reCalc.cron.ratings:  0 0 4 * * ?

# каждый час обновляются рейтинги
task.reCalc.cron.ratings:  0 0 * * * ?

# каждую 30-ю минуту каждого часа старые файлы удаляются
task.purge.cron.ExpiredFiles:  0 30 * * * ?

# В секундах. Время жизни файлов, которые загрузили, но не привязали к статье. Сейчас 2 часа.
time.life.file.without.article: 7200


########################################################### CONFIRM CONSTANTS ################################################################################################################

# Now 12 hours
jwt.timeLife.EmailConfirmLink: 43200

# Now 1 hour
jwt.timeLife.PasswordConfirmLink: 3600

# 5 minuts
time.interval.between.attempts : 300

# 24 hours
time.interval.between.group.attempts : 86400

#Количество попыток на подтверждение за сутки
max.amount.confirm.attempts: 3
###########################################################

##################################################### GraphQL configuration ##############################################
graphql.url: ${GRAPHQL_ENDPOINT_URI}

################################################ FOR DEV
graphiql.endpoint.graphql: ${GRAPHQL_ENDPOINT_URI}

# TODO delete on prod
graphiql.mapping: /api/free/graphiql
##################################################### Test configuration #################################################
spring.main.allow-bean-definition-overriding: true




version: '3.1'
services:

  monolit-db:
    image: postgres:12.3-alpine
    container_name: monolit_postgres
    ports:
      - ${MONOLIT_DB_PORT}:5432
    volumes:
      - ./pg_data:${MONOLIT_PGDATA_DB}
    environment:
      POSTGRES_USER: ${MONOLIT_POSTGRES_USER}
      POSTGRES_PASSWORD: ${MONOLIT_POSTGRES_PASSWORD}
      POSTGRES_DB: ${MONOLIT_POSTGRES_NAME_DB}
      PGDATA: ${MONOLIT_PGDATA_DB}
    restart: always

  monolit:
    build:
      context: Monolit
      dockerfile: monolit.dockerfile
    container_name: monolit
    ports:
      - ${MONOLIT_PORT}:${MONOLIT_PORT}
    volumes:
      - ./back_data:/opt/server/logs
    environment:
      POSTGRES_HOST: monolit-db
      POSTGRES_USER: ${MONOLIT_POSTGRES_USER}
      POSTGRES_PASSWORD: ${MONOLIT_POSTGRES_PASSWORD}
      POSTGRES_DB: ${MONOLIT_POSTGRES_NAME_DB}
      MONOLIT_PORT: ${MONOLIT_PORT}
      GRAPHQL_ENDPOINT_URI: ${GRAPHQL_ENDPOINT_URI}
      HOST_PREFIX: ${HOST_PREFIX}
      EUREKA_HOST: ${HOST_PREFIX}${EUREKA_SERVER_SYSTEM_LOGIN}:${EUREKA_SERVER_SYSTEM_PASSWORD}@monitor:${EUREKA_SERVER_PORT}/eureka
    restart: always
    links:
      - monitor
    depends_on:
      - monolit-db

  monitor:
    build:
      context: Monitor
      dockerfile: dockerfile-admin-eureka.dockerfile
    container_name: monitor
    ports:
      - ${EUREKA_SERVER_PORT}:${EUREKA_SERVER_PORT}
    volumes:
      - ./back_data:/opt/server/logs
    environment:
      EUREKA_SERVER_PORT: ${EUREKA_SERVER_PORT}
      EUREKA_SERVER_SYSTEM_LOGIN: ${EUREKA_SERVER_SYSTEM_LOGIN}
      EUREKA_SERVER_SYSTEM_PASSWORD: ${EUREKA_SERVER_SYSTEM_PASSWORD}
      EUREKA_SERVER_ADMIN_LOGIN: ${EUREKA_SERVER_ADMIN_LOGIN}
      EUREKA_SERVER_ADMIN_PASSWORD: ${EUREKA_SERVER_ADMIN_PASSWORD}
      EUREKA_CLIENT_URI: ${EUREKA_CLIENT_URI}
    restart: always

  proxy-redis:
    build:
      context: Gateway
      dockerfile: redis.dockerfile
    container_name: proxy-redis
    ports:
      - ${GATEWAYJ_REDIS_PORT}:${GATEWAYJ_REDIS_PORT}
    restart: always

  proxy:
    build:
      context: Gateway
      dockerfile: gateway.dockerfile
    container_name: proxy
    ports:
      - ${GATEWAYJ_PORT}:${GATEWAYJ_PORT}
    volumes:
      - ./back_data:/opt/server/logs
    environment:
      HOST_PREFIX: ${HOST_PREFIX}
      EUREKA_HOST: ${HOST_PREFIX}${EUREKA_SERVER_SYSTEM_LOGIN}:${EUREKA_SERVER_SYSTEM_PASSWORD}@monitor:${EUREKA_SERVER_PORT}/eureka
      GATEWAYJ_PORT: ${GATEWAYJ_PORT}
      REDIS_HOST: proxy-redis
    restart: always
    depends_on:
      - proxy-redis
    links:
      - monitor
